name: TAF .NET CI/CD Pipeline

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 3 * * *' 
  workflow_dispatch: # Manual start
  
jobs:
  api-tests:
    name: Run API tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore ./ApiTestAutomation/TestAutomationFramework.sln

      - name: Build the project
        run: dotnet build --configuration Release
        
      - name: Install NUnit framework
        run: dotnet add package nunit
        
      - name: Run API tests
        run: dotnet test --filter Category=API --logger "trx;LogFileName=api-test.trx"

      - name: Upload API test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: '**/api-test.trx'

  ui-tests:
    name: Run UI tests
    runs-on: ubuntu-latest
    needs: api-tests
    if: always() #Run even if API fails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release
      
      - name: Install MsTest framework
        run: dotnet add package mstest
        
      - name: Run UI tests
        run: dotnet test --filter Category=UI --logger "trx;LogFileName=ui-test.trx"

      - name: Upload UI test results and Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: |
                **/api-test.trx
                **/screenshots/

  finalize:
    name: Finalize and publish all artifacts
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]

    steps:
      - name: Download all artifacts
        uses: actions/download-checkout@v4

      - name: Publish all test results
        run: echo "Artifacts published successfully"